#include<bits/stdc++.h>

using namespace std;

class Node {
    public:
        int data;
        Node *left;
        Node *right;
        Node(int d) {
            data = d;
            left = NULL;
            right = NULL;
        }
};

class Solution {
    public:
  		Node* insert(Node* root, int data) {
            if(root == NULL) {
                return new Node(data);
            } else {
                Node* cur;
                if(data <= root->data) {
                    cur = insert(root->left, data);
                    root->left = cur;
                } else {
                    cur = insert(root->right, data);
                    root->right = cur;
               }

               return root;
           }
        }


void topView(node * root) {
    node* tmp = root->left;
    int* a = new int[500]( );
    int c=0, i;
    while(tmp!=NULL){
        a[c] = tmp->data;
        c++;
        tmp = tmp->left;
    }
    for(i=c-1; i>=0; i--)
        cout<<a[i]<<" ";
    delete []a;
    cout<<root->data<<" ";
    tmp = root->right;
    while(tmp!=NULL){
        cout<<tmp->data<<" ";
        tmp = tmp->right;
    }
}
}; //End of Solution

int main() {
  
    Solution myTree;
    Node* root = NULL;
    
    int t;
    int data;

    std::cin >> t;

    while(t-- > 0) {
        std::cin >> data;
        root = myTree.insert(root, data);
    }
  
	myTree.topView(root);
    return 0;
}
